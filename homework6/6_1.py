'''
Создать класс TrafficLight (светофор) и определить у него один атрибут color (цвет) и метод running (запуск).
Атрибут реализовать как приватный. В рамках метода реализовать переключение светофора в режимы: красный, желтый,
зеленый. Продолжительность первого состояния (красный) составляет 7 секунд, второго (желтый) — 2 секунды,
третьего (зеленый) — на ваше усмотрение. Переключение между режимами должно осуществляться только в указанном порядке
(красный, желтый, зеленый). Проверить работу примера, создав экземпляр и вызвав описанный метод.
Задачу можно усложнить, реализовав проверку порядка режимов, и при его нарушении выводить соответствующее сообщение и
завершать скрипт.
'''

from time import sleep
from itertools import cycle

class TrafficLight:

    __color = ['Красный', 'Желтый', 'Зелёный', 'Желтый']

    def __init__(self, try_c):
        self.try_c = try_c # кол-во кругов по списку


    def running(self):
        __color = self.__color
        __len_try = 1 # стартовая точка
        for el in cycle(__color):
            if __len_try <= self.try_c * len(__color):
                if el == 'Красный':
                    __len_try += 1
                    print(el)
                    sleep(7)
                elif el == 'Желтый':
                    __len_try += 1
                    print(el)
                    sleep(2)
                elif el == 'Зелёный':
                    __len_try += 1
                    print(el)
                    sleep(5)
            else:
                break


'''
try_c и __len_try я ввёл для того чтобы цикл не был бесконечным. И не очень понимаю зачем вводить проверку тк разве
можно изменить приватный список и может ли цикл выдать неверное значение.
Но в теории можно добавить
if __color != ['Красный', 'Желтый', 'Зелёный', 'Желтый']:
    break
'''
traffic_light = TrafficLight(int(input('Введите кол-во повторов: ')))
traffic_light.running()